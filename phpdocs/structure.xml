<?xml version="1.0" encoding="utf-8"?>
<project title="Sag Documentation" version="2.2.0&#10;">
  <partials/>
  <file path="httpAdapters/SagNativeHTTPAdapter.php" generated-path="httpAdapters.SagNativeHTTPAdapter.html" hash="e95cc4847b8d0926fe1374ccf1369ab9" package="HTTP">
    <docblock line="0">
      <description>Uses native PHP sockets to communicate with CouchDB. This means zero new
dependencies for your application.</description>
      <long-description>This is also the original socket code that was used in Sag.</long-description>
      <tag name="version" line="0" description="0.9.0"/>
      <tag name="package" line="0" description="HTTP"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="13" package="HTTP">
      <extends>\SagHTTPAdapter</extends>
      <name>SagNativeHTTPAdapter</name>
      <full_name>\SagNativeHTTPAdapter</full_name>
      <docblock line="13">
        <description>Provides a common interface for Sag to connect to CouchDB over HTTP,
allowing for different drivers to be used thereby controling your project's
dependencies.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" line="14" namespace="" package="HTTP">
        <name>$connPool</name>
        <default>array()</default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="19" package="HTTP">
        <name>__destruct</name>
        <full_name>\SagNativeHTTPAdapter::__destruct()</full_name>
        <docblock line="19">
          <description>Closes any sockets that are left open in the connection pool.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="HTTP">
        <name>useSSL</name>
        <full_name>\SagNativeHTTPAdapter::useSSL()</full_name>
        <docblock line="28">
          <description>Native sockets does not support SSL.</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$use</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="HTTP">
        <name>setSSLCert</name>
        <full_name>\SagNativeHTTPAdapter::setSSLCert()</full_name>
        <docblock line="35">
          <description>Native sockets does not support SSL.</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="39" package="HTTP">
        <name>procPacket</name>
        <full_name>\SagNativeHTTPAdapter::procPacket()</full_name>
        <docblock line="39">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reqHeaders</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$specialHost</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$specialPort</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="httpAdapters/SagCURLHTTPAdapter.php" generated-path="httpAdapters.SagCURLHTTPAdapter.html" hash="9d34f486ed850fb2c07adffa8bcde190" package="HTTP">
    <docblock line="0">
      <description>Uses the PHP cURL bindings for HTTP communication with CouchDB. This gives
you more advanced features, like SSL supports, with the cost of an
additional dependency that your shared hosting environment might now have.</description>
      <long-description></long-description>
      <tag name="version" line="0" description="0.9.0"/>
      <tag name="package" line="0" description="HTTP"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="12" package="HTTP">
      <extends>\SagHTTPAdapter</extends>
      <name>SagCURLHTTPAdapter</name>
      <full_name>\SagCURLHTTPAdapter</full_name>
      <docblock line="12">
        <description>Provides a common interface for Sag to connect to CouchDB over HTTP,
allowing for different drivers to be used thereby controling your project's
dependencies.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" line="13" namespace="" package="HTTP">
        <name>$ch</name>
        <default></default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="15" namespace="" package="HTTP">
        <name>$followLocation</name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="17" package="HTTP">
        <name>__construct</name>
        <full_name>\SagCURLHTTPAdapter::__construct()</full_name>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$port</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="34" package="HTTP">
        <name>procPacket</name>
        <full_name>\SagCURLHTTPAdapter::procPacket()</full_name>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reqHeaders</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$specialHost</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$specialPort</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="176" package="HTTP">
        <name>makeFollowAdapter</name>
        <full_name>\SagCURLHTTPAdapter::makeFollowAdapter()</full_name>
        <docblock line="176">
          <description>Used when we need to create a new adapter to follow a redirect because
cURL can't.</description>
          <long-description></long-description>
          <tag name="param" line="176" description="&lt;p&gt;Return value from url_parts() for the location header.&lt;/p&gt;" type="array" variable="$parts">
            <type>array</type>
          </tag>
          <tag name="return" line="176" description="Returns $this if talking to the same server&#10;with the same protocol, otherwise creates a new instance." type="\SagCURLHTTPAdapter">
            <type link="SagCURLHTTPAdapter.html">\SagCURLHTTPAdapter</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parts</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="httpAdapters/SagHTTPAdapter.php" generated-path="httpAdapters.SagHTTPAdapter.html" hash="087f444994ffe5cbc37eaf640d27d298" package="Core">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="true" namespace="" line="10" package="HTTP">
      <extends/>
      <name>SagHTTPAdapter</name>
      <full_name>\SagHTTPAdapter</full_name>
      <docblock line="10">
        <description>Provides a common interface for Sag to connect to CouchDB over HTTP,
allowing for different drivers to be used thereby controling your project's
dependencies.</description>
        <long-description></long-description>
        <tag name="version" line="10" description="0.9.0"/>
        <tag name="package" line="10" description="HTTP"/>
      </docblock>
      <property static="false" visibility="public" line="11" namespace="" package="HTTP">
        <name>$decodeResp</name>
        <default>true</default>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="13" namespace="" package="HTTP">
        <name>$host</name>
        <default></default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="14" namespace="" package="HTTP">
        <name>$port</name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="16" namespace="" package="HTTP">
        <name>$proto</name>
        <default>'http'</default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="17" namespace="" package="HTTP">
        <name>$sslCertPath</name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="19" namespace="" package="HTTP">
        <name>$socketOpenTimeout</name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="20" namespace="" package="HTTP">
        <name>$socketRWTimeoutSeconds</name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="21" namespace="" package="HTTP">
        <name>$socketRWTimeoutMicroseconds</name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="23" package="HTTP">
        <name>__construct</name>
        <full_name>\SagHTTPAdapter::__construct()</full_name>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$host</name>
          <default>"127.0.0.1"</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$port</name>
          <default>"5984"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="36" package="HTTP">
        <name>makeResult</name>
        <full_name>\SagHTTPAdapter::makeResult()</full_name>
        <docblock line="36">
          <description>Used by the concrete HTTP adapters, this abstracts out the generic task of
turning strings from the net into response objects.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;The body of the HTTP packet.&lt;/p&gt;" type="string" variable="$response">
            <type>string</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The request's HTTP method (&quot;HEAD&quot;, etc.).&lt;/p&gt;" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="returns" line="36" description="stdClass The response object."/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="HTTP">
        <name>parseCookieString</name>
        <full_name>\SagHTTPAdapter::parseCookieString()</full_name>
        <docblock line="92">
          <description>A utility function for the concrete adapters to turn the HTTP Cookie
header's value into an object (map).</description>
          <long-description></long-description>
          <tag name="param" line="92" description="&lt;p&gt;The HTTP Cookie header value (not including the&#10;&quot;Cookie: &quot; key.&lt;/p&gt;" type="string" variable="$cookieStr">
            <type>string</type>
          </tag>
          <tag name="returns" line="92" description="stdClass An object mapping cookie name to cookie value."/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$cookieStr</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="123" package="HTTP">
        <name>procPacket</name>
        <full_name>\SagHTTPAdapter::procPacket()</full_name>
        <docblock line="123">
          <description>Processes the packet, returning the server's response.</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;The HTTP method for the request (ex., &quot;HEAD&quot;).&lt;/p&gt;" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="123" description="&lt;p&gt;The URL to hit, not including the host info (ex.,&#10;&quot;/_all_docs&quot;).&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="123" description="&lt;p&gt;A serialized version of any data that needs to be sent&#10;in the packet's body.&lt;/p&gt;" type="string" variable="$data">
            <type>string</type>
          </tag>
          <tag name="param" line="123" description="&lt;p&gt;An associative array of headers where the keys&#10;are the header names.&lt;/p&gt;" type="array" variable="$reqHeaders">
            <type>array</type>
          </tag>
          <tag name="param" line="123" description="&lt;p&gt;Uses the provided host for this packet only -&#10;does not change the adapter's global host setting.&lt;/p&gt;" type="mixed" variable="$specialHost">
            <type>mixed</type>
          </tag>
          <tag name="param" line="123" description="&lt;p&gt;Uses the provided port for this packet only -&#10;does not change the adapter's global port setting.&lt;/p&gt;" type="mixed" variable="$specialPort">
            <type>mixed</type>
          </tag>
          <tag name="returns" line="123" description="stdClass The response object created by makeResponse()."/>
          <tag name="see" line="123" description="" link="\makeResponse()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reqHeaders</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$specialHost</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$specialPort</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="130" package="HTTP">
        <name>useSSL</name>
        <full_name>\SagHTTPAdapter::useSSL()</full_name>
        <docblock line="130">
          <description>Whether to use HTTPS or not.</description>
          <long-description></long-description>
          <tag name="param" line="130" description="&lt;p&gt;Whether to use HTTPS or not.&lt;/p&gt;" type="bool" variable="$use">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$use</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="139" package="HTTP">
        <name>setSSLCert</name>
        <full_name>\SagHTTPAdapter::setSSLCert()</full_name>
        <docblock line="139">
          <description>Sets the location of the CA file.</description>
          <long-description></long-description>
          <tag name="param" line="139" description="&lt;p&gt;The absolute path to the CA file, or null to unset.&lt;/p&gt;" type="mixed" variable="$path">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="148" package="HTTP">
        <name>usingSSL</name>
        <full_name>\SagHTTPAdapter::usingSSL()</full_name>
        <docblock line="148">
          <description>Returns whether Sag is using SSL.</description>
          <long-description></long-description>
          <tag name="returns" line="148" description="bool Returns true if the adapter is using SSL, else false."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="157" package="HTTP">
        <name>setOpenTimeout</name>
        <full_name>\SagHTTPAdapter::setOpenTimeout()</full_name>
        <docblock line="157">
          <description>Sets how long Sag should wait to establish a connection to CouchDB.</description>
          <long-description></long-description>
          <tag name="param" line="157" description="&lt;p&gt;The number of seconds.&lt;/p&gt;" type="int" variable="$seconds">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$seconds</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="171" package="HTTP">
        <name>setRWTimeout</name>
        <full_name>\SagHTTPAdapter::setRWTimeout()</full_name>
        <docblock line="171">
          <description>Set how long we should wait for an HTTP request to be executed.</description>
          <long-description></long-description>
          <tag name="param" line="171" description="&lt;p&gt;The number of seconds.&lt;/p&gt;" type="int" variable="$seconds">
            <type>int</type>
          </tag>
          <tag name="param" line="171" description="&lt;p&gt;The number of microseconds.&lt;/p&gt;" type="int" variable="$microseconds">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$seconds</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$microseconds</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="200" package="HTTP">
        <name>getTimeouts</name>
        <full_name>\SagHTTPAdapter::getTimeouts()</full_name>
        <docblock line="200">
          <description>Returns an associative array of the currently set timeout values.</description>
          <long-description></long-description>
          <tag name="return" line="200" description="An associative array with the keys 'open', 'rwSeconds', and&#10;'rwMicroseconds'." type="array">
            <type>array</type>
          </tag>
          <tag name="see" line="200" description="" link="\setTimeoutsFromArray()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="217" package="HTTP">
        <name>setTimeoutsFromArray</name>
        <full_name>\SagHTTPAdapter::setTimeoutsFromArray()</full_name>
        <docblock line="217">
          <description>A utility function that sets the different timeout values based on an
associative array.</description>
          <long-description></long-description>
          <tag name="param" line="217" description="&lt;p&gt;An associative array with the keys 'open', 'rwSeconds',&#10;and 'rwMicroseconds'.&lt;/p&gt;" type="array" variable="$arr">
            <type>array</type>
          </tag>
          <tag name="see" line="217" description="" link="\getTimeouts()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$arr</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="176">make this better, including checking $microseconds</todo>
    </markers>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="11" code="PPC:ERR-50007">No summary for property $decodeResp</error>
      <error line="13" code="PPC:ERR-50007">No summary for property $host</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $port</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $proto</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $sslCertPath</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $socketOpenTimeout</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $socketRWTimeoutSeconds</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $socketRWTimeoutMicroseconds</error>
      <error line="23" code="PPC:ERR-50015">Argument $host is missing from the Docblock of __construct()</error>
      <error line="23" code="PPC:ERR-50015">Argument $port is missing from the Docblock of __construct()</error>
      <error line="23" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="SagUserUtils.php" generated-path="SagUserUtils.html" hash="b3b98f1594f8a781c38352206598351e" package="Core">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="Utils">
      <extends/>
      <name>SagUserUtils</name>
      <full_name>\SagUserUtils</full_name>
      <docblock line="25">
        <description>Provides utilities to work with and manage CouchDB users, which wraps the
Sag class.</description>
        <long-description></long-description>
        <tag name="version" line="25" description="0.9.0"/>
        <tag name="package" line="25" description="Utils"/>
      </docblock>
      <property static="true" visibility="private" line="26" namespace="" package="Utils">
        <name>$USER_ID_PREFIX</name>
        <default>'org.couchdb.user:'</default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="Utils">
        <name>__construct</name>
        <full_name>\SagUserUtils::__construct()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;An instantiated copy of Sag that you want this class to&#10;use. If you don't specify a database (empty($sag-&gt;currentDatabase())) then&#10;it will be set to '_users'.&lt;/p&gt;" type="\Sag" variable="$sag">
            <type link="Sag.html">\Sag</type>
          </tag>
          <tag name="return" line="35" description="" type="\SagUserUtils">
            <type link="SagUserUtils.html">\SagUserUtils</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sag</name>
          <default></default>
          <type>\Sag</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="69" package="Utils">
        <name>createUser</name>
        <full_name>\SagUserUtils::createUser()</full_name>
        <docblock line="69">
          <description>Creates a user and returns the server's response. If no name is provided,
then the id is duplicated into that position.</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;The user's ID without the 'org.couchdb.user:' prefix.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="69" description="&lt;p&gt;The password, which will be salted and encrypted&#10;for you.&lt;/p&gt;" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="param" line="69" description="&lt;p&gt;(OPTIONAL) The user's name. If not provided, then it&#10;will be the same as the provided $id.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="69" description="&lt;p&gt;(OPTIONAL) An array of roles (strings) for the user.&lt;/p&gt;" type="array" variable="$roles">
            <type>array</type>
          </tag>
          <tag name="return" line="69" description="The server's response, as you would expect from Sag's put()&#10;function." type="object">
            <type>object</type>
          </tag>
          <tag name="see" line="69" description="" link="\Sag::put()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$roles</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="128" package="Utils">
        <name>getUser</name>
        <full_name>\SagUserUtils::getUser()</full_name>
        <docblock line="128">
          <description>Returns the user document from the database (just the response body, not
HTTP info).</description>
          <long-description></long-description>
          <tag name="param" line="128" description="&lt;p&gt;The user's _id.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="128" description="&lt;p&gt;Specify whether the $id you are providing has&#10;'org.couchdb.user:' prepended to it. If it doesn't (set to false, which is&#10;the default) then the string will be prepended for you.&lt;/p&gt;" type="bool" variable="$hasPrepend">
            <type>bool</type>
          </tag>
          <tag name="return" line="128" description="The user document: just the body property from Sag-&gt;get()'s&#10;return value." type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$hasPrepend</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="149" package="Utils">
        <name>changePassword</name>
        <full_name>\SagUserUtils::changePassword()</full_name>
        <docblock line="149">
          <description>Takes a user document and new password, generates a salt, and updates the
password for that user document. You can optionally have the function send
the updated document to the server as well.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="&lt;p&gt;The user document. Expected to look like what&#10;SagUserUtils-&gt;getUser() returns.&lt;/p&gt;" type="object" variable="$doc">
            <type>object</type>
          </tag>
          <tag name="param" line="149" description="&lt;p&gt;The new password for the user.&lt;/p&gt;" type="string" variable="$newPassword">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="&lt;p&gt;Whether to PUT the document to the server after&#10;updating it. Defaults to false.&lt;/p&gt;" type="bool" variable="$upload">
            <type>bool</type>
          </tag>
          <tag name="return" line="149" description="If you set $upload to false, then just the updated document&#10;is returned. If you set $upload to true, then the result of Sag-&gt;put() is&#10;returned, so you get the updated document and HTTP information." type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$doc</name>
          <default></default>
          <type>object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newPassword</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$upload</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="Utils">
        <name>makeSalt</name>
        <full_name>\SagUserUtils::makeSalt()</full_name>
        <docblock line="174">
          <description>Generates a salt that will be used when setting users' passwords. By
default it requests a uuid from the CouchDB server you specified.</description>
          <long-description></long-description>
          <tag name="return" line="174" description="A randomly generated string of characters that will be used&#10;to salt users' passwords." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="26" code="PPC:ERR-50007">No summary for property $USER_ID_PREFIX</error>
      <error line="35" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="SagCache.php" generated-path="SagCache.html" hash="b3adc9105fd063ac3171efae16ebc58c" package="Core">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="true" namespace="" line="30" package="Cache">
      <extends/>
      <name>SagCache</name>
      <full_name>\SagCache</full_name>
      <docblock line="30">
        <description>All the caching systems that Sag can leverage must extend this. The cache
values should always be the object that Sag::procPacket() would return.</description>
        <long-description>The default cache size is 1MB (one million bytes).

Cache values are objects (stdClass for PHP storage, or JSON for external
storage).</long-description>
        <tag name="package" line="30" description="Cache"/>
        <tag name="version" line="30" description="0.9.0"/>
      </docblock>
      <property static="false" visibility="private" line="31" namespace="" package="Cache">
        <name>$maxSize</name>
        <default></default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="33" namespace="" package="Cache">
        <name>$currentSize</name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="Cache">
        <name>__construct</name>
        <full_name>\SagCache::__construct()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="46" package="Cache">
        <name>get</name>
        <full_name>\SagCache::get()</full_name>
        <docblock line="46">
          <description>Returns the cached object or null if nothing is cached.</description>
          <long-description></long-description>
          <tag name="param" line="46" description="&lt;p&gt;The URL of the request we're caching.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="46" description="" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="70" package="Cache">
        <name>set</name>
        <full_name>\SagCache::set()</full_name>
        <docblock line="70">
          <description>Caches the item returned at the provided key, replacing any pre-existing
cached item. If the cache's size will be exceeded by caching the new item,
then it will remove items from the cache until there is sufficient room.</description>
          <long-description>Returns false if the item cannot be added to the cache for any reason:
exceeds the cache size, invalid type, or relevant HTTP headers.

Returns true if we were able to add the item, and there was no previously
cached item.

Returns the previously cached item if there was one and we were able to
add the new item to the cache.

Sag will refuse to cache the object by throwing a SagException if adding
the file to the cache would exceed 95% of the disk or partition's free
space.</long-description>
          <tag name="param" line="70" description="&lt;p&gt;The URL of the request we're caching.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="70" description="&lt;p&gt;The response we're caching.&lt;/p&gt;" type="object" variable="$item">
            <type>object</type>
          </tag>
          <tag name="return" line="70" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$item</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="79" package="Cache">
        <name>remove</name>
        <full_name>\SagCache::remove()</full_name>
        <docblock line="79">
          <description>Removes the item from the cache and returns it (null if nothing was
cached).</description>
          <long-description></long-description>
          <tag name="param" line="79" description="&lt;p&gt;The URL of the response we're removing from the cache.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="79" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="89" package="Cache">
        <name>clear</name>
        <full_name>\SagCache::clear()</full_name>
        <docblock line="89">
          <description>Clears the whole cache without applying any logic.</description>
          <long-description>Returns true if the entire cache was cleared, otherwise false if only part
or none of it was cleared.</long-description>
          <tag name="return" line="89" description="" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="96" package="Cache">
        <name>setSize</name>
        <full_name>\SagCache::setSize()</full_name>
        <docblock line="96">
          <description>Sets the max size of the cache in bytes.</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The size of the cache in bytes (&gt;0).&lt;/p&gt;" type="int" variable="$bytes">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bytes</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="Cache">
        <name>getSize</name>
        <full_name>\SagCache::getSize()</full_name>
        <docblock line="110">
          <description>Returns the max size of the cache, irrespective of what is or isn't in the
cache.</description>
          <long-description></long-description>
          <tag name="return" line="110" description="" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="Cache">
        <name>getUsage</name>
        <full_name>\SagCache::getUsage()</full_name>
        <docblock line="120">
          <description>Returns the total size of the items in the cache in bytes. Not reliable if
you're using SagMemoryCache.</description>
          <long-description></long-description>
          <tag name="return" line="120" description="" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="130" package="Cache">
        <name>makeKey</name>
        <full_name>\SagCache::makeKey()</full_name>
        <docblock line="130">
          <description>Generates the hash of the provided URL that will be used as the cache key.</description>
          <long-description></long-description>
          <tag name="param" line="130" description="&lt;p&gt;The URL to hash.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="130" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="134" package="Cache">
        <name>addToSize</name>
        <full_name>\SagCache::addToSize()</full_name>
        <docblock line="134">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$amt</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="151" package="Cache">
        <name>mayCache</name>
        <full_name>\SagCache::mayCache()</full_name>
        <docblock line="151">
          <description>Returns whether or not the item may be cached. It has to be a stdClass
that Sag would return, with a valid E-Tag, and no cache headers that tell
us to not cache.</description>
          <long-description></long-description>
          <tag name="param" line="151" description="&lt;p&gt;item that we're trying to cache - it should be a response as a&#10;stdClass.&lt;/p&gt;" type="\The" variable="">
            <type link="The.html">\The</type>
          </tag>
          <tag name="return" line="151" description="" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="31" code="PPC:ERR-50007">No summary for property $maxSize</error>
      <error line="33" code="PPC:ERR-50007">No summary for property $currentSize</error>
      <error line="35" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="134" code="PPC:ERR-50015">Argument $amt is missing from the Docblock of addToSize()</error>
      <error line="134" code="PPC:ERR-50008">No summary for method addToSize()</error>
      <error line="151" code="PPC:ERR-50015">Argument $item is missing from the Docblock of mayCache()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="SagCouchException.php" generated-path="SagCouchException.html" hash="b6b5bf9056f20e981b75e0723fe0d1b4" package="Core">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="" line="27" package="Core">
      <extends>\Exception</extends>
      <name>SagCouchException</name>
      <full_name>\SagCouchException</full_name>
      <docblock line="27">
        <description>This exception is thrown when CouchDB reports an error, such as sending
malformed JSON, and not Sag.</description>
        <long-description>The exception's code ($e-&gt;getCode()) is the HTTP status code. For example,
if the requested document isn't found, then the code would be set to "404"
(string).</long-description>
        <tag name="version" line="27" description="0.9.0"/>
        <tag name="package" line="27" description="Core"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="Core">
        <name>__construct</name>
        <full_name>\SagCouchException::__construct()</full_name>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>""</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="28" code="PPC:ERR-50015">Argument $msg is missing from the Docblock of __construct()</error>
      <error line="28" code="PPC:ERR-50015">Argument $code is missing from the Docblock of __construct()</error>
      <error line="28" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJxlU9FO20AQfPdXrCwkEmScqOKlaWkbQhCmyKmwKeIJXc4b+1T7zr07Y1DFv3fXSQqoeYnubnd2dmb8+WtbtcHkKACAayVROyyg0wVa8BXCvBWS/nYvEfxE65TR8CGewogLwt1TOP7EEM+mg0Y8gzYeOoeEoRxsVI2ATxJbD0qDNE1bK6ElQq98NczZocSMcb/DMGsvqFxQQ0unzdtCED7gWv5V3rezyaTv+1gMdGNjy0m9LXST62SxTLPlMVEeWm51jc6Bxd+dsrTs+hlES4SkWBPNWvRgLIjSIr15w4R7q7zSZQTObHwvLDJMoZy3at35d3rt6dHWbwtIMaEhnGeQZCGczbMkixjkLskvV7c53M1vbuZpniwzWN3AYpWeJ3mySul0AfP0Hr4n6XkESGrRHHxqLW9ANBUricUgW4b4jsLGbCm5FqXaKEmr6bITJUJpHtFq2ghatI1y7KgjggXD1KpRXvjh6r+94uBoElBaKC5HkLO3W1s5EnTwlTU96VWhhoXpZHV+Rjq3xnqGB7TWWFKRHkA4cKgLIsFQjaiJbkNKXWWrNGIuQ4QyUdJuu2n4OuzQUSgKhNEBHn8p0S/oMBqPtxwQLvP8BzjaotvWxXBhWDdBcmHEaGqbJg4BOnaoMLJrUFNAnT70JB7tHnGNHgqHab3pasoLSYqeoxGeTE9CRhux07oc77l+e9x9JtP4I6WObyiYv1j7heH4kIqyFuQhLTgItfwnIz550sXB680fsqXt1pRQ2HRaDncPD5IM8raTfnTQuBJOIQwjOBh4nsJ0PHRRH6VV+9nsbX24t2bJfsyA+/e9w1f8ErwEfwFW6lRL</source>
  </file>
  <file path="Sag.php" generated-path="Sag.html" hash="bd6cd67fab945cb2b49abb9546faa10f" package="Core">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="" line="27" package="Core">
      <extends/>
      <name>Sag</name>
      <full_name>\Sag</full_name>
      <docblock line="27">
        <description>The Sag class provides the core functionality for talking to CouchDB.</description>
        <long-description></long-description>
        <tag name="version" line="27" description="0.9.0"/>
        <tag name="package" line="27" description="Core"/>
      </docblock>
      <property static="true" visibility="public" line="32" namespace="" package="Core">
        <name>$AUTH_BASIC</name>
        <default>"AUTH_BASIC"</default>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="32" description="&lt;p&gt;Used by login() to use HTTP Basic Authentication.&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="static" line="32" description=""/>
        </docblock>
      </property>
      <property static="true" visibility="public" line="38" namespace="" package="Core">
        <name>$AUTH_COOKIE</name>
        <default>"AUTH_COOKIE"</default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="&lt;p&gt;Used by login() to use HTTP Cookie Authentication.&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="static" line="38" description=""/>
        </docblock>
      </property>
      <property static="true" visibility="public" line="45" namespace="" package="Core">
        <name>$HTTP_NATIVE_SOCKETS</name>
        <default>'HTTP_NATIVE_SOCKETS'</default>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="45" description="&lt;p&gt;Used to identify SagNativeHTTPAdapter by setHTTPAdapter() and&#10;company.&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="static" line="45" description=""/>
        </docblock>
      </property>
      <property static="true" visibility="public" line="52" namespace="" package="Core">
        <name>$HTTP_CURL</name>
        <default>'HTTP_CURL'</default>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="52" description="&lt;p&gt;Used to identify SagCURLHTTPAdapter by setHTTPAdapter() and&#10;company.&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="static" line="52" description=""/>
        </docblock>
      </property>
      <property static="false" visibility="private" line="54" namespace="" package="Core">
        <name>$db</name>
        <default></default>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="55" namespace="" package="Core">
        <name>$host</name>
        <default></default>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="56" namespace="" package="Core">
        <name>$port</name>
        <default></default>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="57" namespace="" package="Core">
        <name>$pathPrefix</name>
        <default>''</default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="59" namespace="" package="Core">
        <name>$user</name>
        <default></default>
        <docblock line="59">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="60" namespace="" package="Core">
        <name>$pass</name>
        <default></default>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="61" namespace="" package="Core">
        <name>$authType</name>
        <default></default>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="62" namespace="" package="Core">
        <name>$authSession</name>
        <default></default>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="64" namespace="" package="Core">
        <name>$cache</name>
        <default></default>
        <docblock line="64">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="66" namespace="" package="Core">
        <name>$staleDefault</name>
        <default></default>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="68" namespace="" package="Core">
        <name>$globalCookies</name>
        <default>array()</default>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="70" namespace="" package="Core">
        <name>$httpAdapter</name>
        <default></default>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="71" namespace="" package="Core">
        <name>$httpAdapterType</name>
        <default></default>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="80" package="Core">
        <name>__construct</name>
        <full_name>\Sag::__construct()</full_name>
        <docblock line="80">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="80" description="&lt;p&gt;(OPTIONAL) The host's IP or address of the Couch we're&#10;connecting to. Defaults to '127.0.0.1'.&lt;/p&gt;" type="string" variable="$host">
            <type>string</type>
          </tag>
          <tag name="param" line="80" description="&lt;p&gt;(OPTIONAL) The host's port that Couch is listening on.&#10;Defaults to '5984'.&lt;/p&gt;" type="string" variable="$port">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$host</name>
          <default>"127.0.0.1"</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$port</name>
          <default>"5984"</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="99" package="Core">
        <name>setHTTPAdapter</name>
        <full_name>\Sag::setHTTPAdapter()</full_name>
        <docblock line="99">
          <description>Set which HTTP library you want to use for communicating with CouchDB.</description>
          <long-description></long-description>
          <tag name="param" line="99" description="&lt;p&gt;The type of adapter you want to use. Should be one of&#10;the Sag::$HTTP_* variables.&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="99" description="Returns $this." type="\Sag">
            <type link="Sag.html">\Sag</type>
          </tag>
          <tag name="see" line="99" description="" link="\Sag::HTTP_NATIVE_SOCKETS"/>
          <tag name="see" line="99" description="" link="\Sag::HTTP_CURL"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="152" package="Core">
        <name>currentHTTPAdapter</name>
        <full_name>\Sag::currentHTTPAdapter()</full_name>
        <docblock line="152">
          <description>Returns the current HTTP adapter being used.</description>
          <long-description></long-description>
          <tag name="return" line="152" description="Will be equal to Sag::$HTTP_NATIVE_SOCKETS or&#10;Sag::$HTTP_CURL." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="176" package="Core">
        <name>login</name>
        <full_name>\Sag::login()</full_name>
        <docblock line="176">
          <description>Updates the login credentials in Sag that will be used for all further
communications. Pass null to both $user and $pass to turn off
authentication, as Sag does support blank usernames and passwords - only
one of them has to be set for packets to be sent with authentication.</description>
          <long-description>Cookie authentication will cause a call to the server to establish the
session, and will throw an exception if the credentials weren't valid.</long-description>
          <tag name="param" line="176" description="&lt;p&gt;The username you want to login with. (null for none)&lt;/p&gt;" type="string" variable="$user">
            <type>string</type>
          </tag>
          <tag name="param" line="176" description="&lt;p&gt;The password you want to login with. (null for none)&lt;/p&gt;" type="string" variable="$pass">
            <type>string</type>
          </tag>
          <tag name="param" line="176" description="&lt;p&gt;The type of login system being used. Defaults to&#10;Sag::$AUTH_BASIC.&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="176" description="Returns true if the input was valid. If using $AUTH_COOKIE,&#10;then the autoSession value will be returned. Throws on failure." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="see" line="176" description="" link="\$AUTH_BASIC"/>
          <tag name="see" line="176" description="" link="\$AUTH_COOKIE"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pass</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="219" package="Core">
        <name>getSession</name>
        <full_name>\Sag::getSession()</full_name>
        <docblock line="219">
          <description>Get current session information on the server with /_session.</description>
          <long-description></long-description>
          <tag name="return" line="219" description="" type="\stdClass">
            <type link="stdClass.html">\stdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="230" package="Core">
        <name>decode</name>
        <full_name>\Sag::decode()</full_name>
        <docblock line="230">
          <description>Sets whether Sag will decode CouchDB's JSON responses with json_decode()
or to simply return the JSON as a string. Defaults to true.</description>
          <long-description></long-description>
          <tag name="param" line="230" description="&lt;p&gt;True to decode, false to not decode.&lt;/p&gt;" type="bool" variable="$decode">
            <type>bool</type>
          </tag>
          <tag name="return" line="230" description="Returns $this." type="\Sag">
            <type link="Sag.html">\Sag</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$decode</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="250" package="Core">
        <name>get</name>
        <full_name>\Sag::get()</full_name>
        <docblock line="250">
          <description>Performs an HTTP GET operation for the supplied URL. The database name you
provided is automatically prepended to the URL, so you only need to give
the portion of the URL that comes after the database name.</description>
          <long-description>You are responsible for URL encoding your own parameters.</long-description>
          <tag name="param" line="250" description="&lt;p&gt;The URL, with or without the leading slash.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="250" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="312" package="Core">
        <name>head</name>
        <full_name>\Sag::head()</full_name>
        <docblock line="312">
          <description>Performs an HTTP HEAD operation for the supplied document. This operation
does not try to read from a provided cache, and does not cache its
results.</description>
          <long-description></long-description>
          <tag name="see" line="312" description="" link="\http://wiki.apache.org/couchdb/HTTP_Document_API#HEAD"/>
          <tag name="param" line="312" description="&lt;p&gt;The URL, with or without the leading slash.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="312" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="338" package="Core">
        <name>delete</name>
        <full_name>\Sag::delete()</full_name>
        <docblock line="338">
          <description>DELETE's the specified document.</description>
          <long-description></long-description>
          <tag name="param" line="338" description="&lt;p&gt;The document's _id.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="338" description="&lt;p&gt;The document's _rev.&lt;/p&gt;" type="string" variable="$rev">
            <type>string</type>
          </tag>
          <tag name="return" line="338" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$rev</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="366" package="Core">
        <name>put</name>
        <full_name>\Sag::put()</full_name>
        <docblock line="366">
          <description>PUT's the data to the document.</description>
          <long-description></long-description>
          <tag name="param" line="366" description="&lt;p&gt;The document's _id.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="366" description="&lt;p&gt;The document, which should have _id and _rev&#10;properties. Can be an object, array, or string.&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="return" line="366" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="424" package="Core">
        <name>post</name>
        <full_name>\Sag::post()</full_name>
        <docblock line="424">
          <description>POST's the provided document. When using a SagCache, the created document
and response are not cached.</description>
          <long-description></long-description>
          <tag name="param" line="424" description="&lt;p&gt;The document that you want created. Can be an object,&#10;array, or string.&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="param" line="424" description="&lt;p&gt;Can be the path to a view or /all_docs. The database&#10;will be prepended to the value.&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="424" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="460" package="Core">
        <name>bulk</name>
        <full_name>\Sag::bulk()</full_name>
        <docblock line="460">
          <description>Bulk pushes documents to the database.</description>
          <long-description>This function does not leverage the caching mechanism you specify with
setCache().</long-description>
          <tag name="param" line="460" description="&lt;p&gt;An array of the documents you want to be pushed; they&#10;can be JSON strings, objects, or arrays.&lt;/p&gt;" type="array" variable="$docs">
            <type>array</type>
          </tag>
          <tag name="param" line="460" description="&lt;p&gt;Whether to treat the transactions as &quot;all or&#10;nothing&quot; or not. Defaults to false.&lt;/p&gt;" type="bool" variable="$allOrNothing">
            <type>bool</type>
          </tag>
          <tag name="return" line="460" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$docs</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$allOrNothing</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="498" package="Core">
        <name>copy</name>
        <full_name>\Sag::copy()</full_name>
        <docblock line="498">
          <description>COPY's the document.</description>
          <long-description>If you are using a SagCache and are copying to an existing destination,
then the result will be cached (ie., what's copied to the /$destID URL).</long-description>
          <tag name="param" line="498" description="&lt;p&gt;The _id of the document you're copying.&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="param" line="498" description="&lt;p&gt;The _id of the document you're copying to.&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="param" line="498" description="&lt;p&gt;The _rev of the document you're copying to. Defaults to&#10;null.&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="return" line="498" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$srcID</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dstID</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dstRev</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="541" package="Core">
        <name>setDatabase</name>
        <full_name>\Sag::setDatabase()</full_name>
        <docblock line="541">
          <description>Sets which database Sag is going to send all of its database related
communications to (ex., dealing with documents).</description>
          <long-description>When specifying that the database should be created if it doesn't already
exists, this will cause an HTTP GET to be sent to /dbName and
createDatabase($db) if a 404 response is returned. So, only turn it on if
it makes sense for your application, because it could cause needless HTTP
GET calls.</long-description>
          <tag name="param" line="541" description="&lt;p&gt;The database's name, as you'd put in the URL. This&#10;string will be URL encoded using PHP's urlencode().&lt;/p&gt;" type="string" variable="$db">
            <type>string</type>
          </tag>
          <tag name="param" line="541" description="&lt;p&gt;Whether to try and create the specified&#10;database if it doesn't exist yet (checks every time this is called).&lt;/p&gt;" type="bool" variable="$createIfNotFound">
            <type>bool</type>
          </tag>
          <tag name="return" line="541" description="Returns $this. Throws on failure." type="\Sag">
            <type link="Sag.html">\Sag</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$createIfNotFound</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="586" package="Core">
        <name>getAllDocs</name>
        <full_name>\Sag::getAllDocs()</full_name>
        <docblock line="586">
          <description>Gets all the documents in the database with _all_docs. Its results will
not be cached by SagCache.</description>
          <long-description></long-description>
          <tag name="param" line="586" description="&lt;p&gt;Whether to include the documents or not. Defaults to&#10;false.&lt;/p&gt;" type="bool" variable="$incDocs">
            <type>bool</type>
          </tag>
          <tag name="param" line="586" description="&lt;p&gt;Limits the number of documents to return. Must be &gt;= 0,&#10;or null for no limit. Defaults to null (no limit).&lt;/p&gt;" type="int" variable="$limit">
            <type>int</type>
          </tag>
          <tag name="param" line="586" description="&lt;p&gt;The startkey variable (valid JSON). Defaults to&#10;null.&lt;/p&gt;" type="string" variable="$startKey">
            <type>string</type>
          </tag>
          <tag name="param" line="586" description="&lt;p&gt;The endkey variable (valid JSON). Defaults to null.&lt;/p&gt;" type="string" variable="$endKey">
            <type>string</type>
          </tag>
          <tag name="param" line="586" description="&lt;p&gt;An array of keys (strings) of the specific documents&#10;you're trying to get.&lt;/p&gt;" type="array" variable="$keys">
            <type>array</type>
          </tag>
          <tag name="param" line="586" description="&lt;p&gt;Whether to sort the results in descending order or&#10;not.&lt;/p&gt;" type="bool" variable="$descending">
            <type>bool</type>
          </tag>
          <tag name="return" line="586" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$incDocs</name>
          <default>false</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$startKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$endKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$descending</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="655" package="Core">
        <name>getAllDatabases</name>
        <full_name>\Sag::getAllDatabases()</full_name>
        <docblock line="655">
          <description>Gets all the databases on the server with _all_dbs.</description>
          <long-description></long-description>
          <tag name="return" line="655" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="665" package="Core">
        <name>generateIDs</name>
        <full_name>\Sag::generateIDs()</full_name>
        <docblock line="665">
          <description>Uses CouchDB to generate IDs.</description>
          <long-description></long-description>
          <tag name="param" line="665" description="&lt;p&gt;The number of IDs to generate (&gt;= 0). Defaults to 10.&lt;/p&gt;" type="int" variable="$num">
            <type>int</type>
          </tag>
          <tag name="return" line="665" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$num</name>
          <default>10</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="681" package="Core">
        <name>createDatabase</name>
        <full_name>\Sag::createDatabase()</full_name>
        <docblock line="681">
          <description>Creates a database with the specified name.</description>
          <long-description></long-description>
          <tag name="param" line="681" description="&lt;p&gt;The name of the database you want to create.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="681" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="696" package="Core">
        <name>deleteDatabase</name>
        <full_name>\Sag::deleteDatabase()</full_name>
        <docblock line="696">
          <description>Deletes the specified database.</description>
          <long-description></long-description>
          <tag name="param" line="696" description="&lt;p&gt;The database's name.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="696" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="722" package="Core">
        <name>replicate</name>
        <full_name>\Sag::replicate()</full_name>
        <docblock line="722">
          <description>Starts a replication job between two databases, independently of which
database you set with Sag.</description>
          <long-description></long-description>
          <tag name="param" line="722" description="&lt;p&gt;The name of the database that you are replicating from.&lt;/p&gt;" type="string" variable="$src">
            <type>string</type>
          </tag>
          <tag name="param" line="722" description="&lt;p&gt;The name of the database that you are replicating&#10;to.&lt;/p&gt;" type="string" variable="$target">
            <type>string</type>
          </tag>
          <tag name="param" line="722" description="&lt;p&gt;Whether to make this a continuous replication job&#10;or not. Defaults to false.&lt;/p&gt;" type="bool" variable="$continuous">
            <type>bool</type>
          </tag>
          <tag name="param" line="722" description="&lt;p&gt;Specifies create_target, which will create the&#10;target database if it does not already exist. (optional)&lt;/p&gt;" type="bool" variable="$createTarget">
            <type>bool</type>
          </tag>
          <tag name="param" line="722" description="&lt;p&gt;The name of the filter function to use. (optional)&lt;/p&gt;" type="string" variable="$filter">
            <type>string</type>
          </tag>
          <tag name="param" line="722" description="&lt;p&gt;An object or associative array of&#10;parameters to be passed to the filter function via query_params. Only used&#10;if $filter is set.&lt;/p&gt;" type="mixed" variable="$filterQueryParams">
            <type>mixed</type>
          </tag>
          <tag name="return" line="722" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$src</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$continuous</name>
          <default>false</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$createTarget</name>
          <default>null</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterQueryParams</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="785" package="Core">
        <name>compact</name>
        <full_name>\Sag::compact()</full_name>
        <docblock line="785">
          <description>Starts a compaction job on the database you selected, or optionally one of
its views.</description>
          <long-description></long-description>
          <tag name="param" line="785" description="&lt;p&gt;The database's view that you want to compact,&#10;instead of the whole database.&lt;/p&gt;" type="string" variable="$viewName">
            <type>string</type>
          </tag>
          <tag name="return" line="785" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$viewName</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="804" package="Core">
        <name>setAttachment</name>
        <full_name>\Sag::setAttachment()</full_name>
        <docblock line="804">
          <description>Create or update attachments on documents by passing in a serialized
version of your attachment (a string).</description>
          <long-description></long-description>
          <tag name="param" line="804" description="&lt;p&gt;The attachment's name.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="804" description="&lt;p&gt;The attachment's data, in string representation. Ie.,&#10;you need to serialize your attachment.&lt;/p&gt;" type="string" variable="$data">
            <type>string</type>
          </tag>
          <tag name="param" line="804" description="&lt;p&gt;The proper Content-Type for your attachment.&lt;/p&gt;" type="string" variable="$contentType">
            <type>string</type>
          </tag>
          <tag name="param" line="804" description="&lt;p&gt;The _id of the document that the attachment&#10;belongs to.&lt;/p&gt;" type="string" variable="$docID">
            <type>string</type>
          </tag>
          <tag name="param" line="804" description="&lt;p&gt;optional The _rev of the document that the attachment&#10;belongs to. Leave blank if you are creating a new document.&lt;/p&gt;" type="string" variable="$rev">
            <type>string</type>
          </tag>
          <tag name="return" line="804" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contentType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$docID</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$rev</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="834" package="Core">
        <name>setOpenTimeout</name>
        <full_name>\Sag::setOpenTimeout()</full_name>
        <docblock line="834">
          <description>Sets how long Sag should wait to establish a connection to CouchDB.</description>
          <long-description></long-description>
          <tag name="param" line="834" description="" type="int" variable="$seconds">
            <type>int</type>
          </tag>
          <tag name="return" line="834" description="Returns $this." type="\Sag">
            <type link="Sag.html">\Sag</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$seconds</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="852" package="Core">
        <name>setRWTimeout</name>
        <full_name>\Sag::setRWTimeout()</full_name>
        <docblock line="852">
          <description>How long Sag should wait to execute a request with CouchDB. If not set,
then either default_socket_timeout from your php.ini or cURL's defaults
are used depending on which adapter you're using.</description>
          <long-description>Use setOpenTimeout() to set the timeout on opening the socket.</long-description>
          <tag name="param" line="852" description="&lt;p&gt;The seconds part of the timeout.&lt;/p&gt;" type="int" variable="$seconds">
            <type>int</type>
          </tag>
          <tag name="param" line="852" description="&lt;p&gt;optional The microseconds part of the timeout.&lt;/p&gt;" type="int" variable="$microseconds">
            <type>int</type>
          </tag>
          <tag name="return" line="852" description="Returns $this." type="\Sag">
            <type link="Sag.html">\Sag</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$seconds</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$microseconds</name>
          <default>0</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="865" package="Core">
        <name>setCache</name>
        <full_name>\Sag::setCache()</full_name>
        <docblock line="865">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$cacheImpl</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="880" package="Core">
        <name>getCache</name>
        <full_name>\Sag::getCache()</full_name>
        <docblock line="880">
          <description>Returns the cache object that's currently being used.</description>
          <long-description></long-description>
          <tag name="return" line="880" description="" type="\SagCache">
            <type link="SagCache.html">\SagCache</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="890" package="Core">
        <name>currentDatabase</name>
        <full_name>\Sag::currentDatabase()</full_name>
        <docblock line="890">
          <description>Returns the name of the database Sag is currently working with, or null if
setDatabase() hasn't been called yet.</description>
          <long-description></long-description>
          <tag name="return" line="890" description="" type="String">
            <type>String</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="899" package="Core">
        <name>getStats</name>
        <full_name>\Sag::getStats()</full_name>
        <docblock line="899">
          <description>Retrieves the run time metrics from CouchDB that lives at /_stats.</description>
          <long-description></long-description>
          <tag name="return" line="899" description="" type="\stdClass">
            <type link="stdClass.html">\stdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="915" package="Core">
        <name>setStaleDefault</name>
        <full_name>\Sag::setStaleDefault()</full_name>
        <docblock line="915">
          <description>Set whether or not to include ?stale=ok by default when running GET and
HEAD requests.</description>
          <long-description>When set to true, a very slight overhead in the get() and head() functions
will occur, as they will parse out the parameters from the URL you
provide and ensure that no other value is being passed to the stale
variable.</long-description>
          <tag name="param" line="915" description="&lt;p&gt;True will make stale=ok be sent by default.&lt;/p&gt;" type="bool" variable="$stale">
            <type>bool</type>
          </tag>
          <tag name="return" line="915" description="Returns $this." type="\Sag">
            <type link="Sag.html">\Sag</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stale</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="939" package="Core">
        <name>setCookie</name>
        <full_name>\Sag::setCookie()</full_name>
        <docblock line="939">
          <description>Sets a global cookie that will overwrite any other internal cookie values
that Sag tries to set. For example, if you set AuthSession and call
login(), then the AuthSession value you specify will overwrite the value
retrieved from the server, so don't set AuthSession while using login().</description>
          <long-description>Setting the value to null will make Sag no longer send the cookie.</long-description>
          <tag name="param" line="939" description="&lt;p&gt;The cookie's key.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="939" description="&lt;p&gt;The cookie's value.&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="939" description="Returns $this." type="\Sag">
            <type link="Sag.html">\Sag</type>
          </tag>
          <tag name="see" line="939" description="" link="\getCookie()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="965" package="Core">
        <name>getCookie</name>
        <full_name>\Sag::getCookie()</full_name>
        <docblock line="965">
          <description>Returns the global cookie as set in setCookie().</description>
          <long-description></long-description>
          <tag name="return" line="965" description="The cookie's value or null if not set." type="String">
            <type>String</type>
          </tag>
          <tag name="see" line="965" description="" link="\setCookie()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="981" package="Core">
        <name>useSSL</name>
        <full_name>\Sag::useSSL()</full_name>
        <docblock line="981">
          <description>Set whether to use SSL or not.</description>
          <long-description>By default the host's certificate will not be verified: you must provide a
certifivate to setSSLCert() to enable verification.</long-description>
          <tag name="param" line="981" description="&lt;p&gt;Set to true to use SSL, false to not.&lt;/p&gt;" type="bool" variable="$use">
            <type>bool</type>
          </tag>
          <tag name="return" line="981" description="Returns $this." type="\Sag">
            <type link="Sag.html">\Sag</type>
          </tag>
          <tag name="see" line="981" description="" link="\setSSLCert()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$use</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1000" package="Core">
        <name>usingSSL</name>
        <full_name>\Sag::usingSSL()</full_name>
        <docblock line="1000">
          <description>Returns whether Sag is using SSL or not.</description>
          <long-description></long-description>
          <tag name="return" line="1000" description="true means Sag is using SSL, false means Sag is not." type="bool">
            <type>bool</type>
          </tag>
          <tag name="see" line="1000" description="" link="\useSSL()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1016" package="Core">
        <name>setSSLCert</name>
        <full_name>\Sag::setSSLCert()</full_name>
        <docblock line="1016">
          <description>Provide a path to a file that contains one or more certificates to verify
the CouchDB host with when using SSL. Only applies if you set
useSSL(true).</description>
          <long-description></long-description>
          <tag name="param" line="1016" description="&lt;p&gt;File path to the certificate file. Pass null to unset&#10;the path.&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="1016" description="Returns $this." type="\Sag">
            <type link="Sag.html">\Sag</type>
          </tag>
          <tag name="see" line="1016" description="" link="\useSSL()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1036" package="Core">
        <name>setPathPrefix</name>
        <full_name>\Sag::setPathPrefix()</full_name>
        <docblock line="1036">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1046" package="Core">
        <name>getPathPrefix</name>
        <full_name>\Sag::getPathPrefix()</full_name>
        <docblock line="1046">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1051" package="Core">
        <name>procPacket</name>
        <full_name>\Sag::procPacket()</full_name>
        <docblock line="1051">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1154" package="Core">
        <name>setURLParameter</name>
        <full_name>\Sag::setURLParameter()</full_name>
        <docblock line="1154">
          <description>Takes a URL and k/v combo for a URL parameter, break the query string out
of the URL, and sets the parameter to the k/v pair you pass in. This will
overwrite a paramter's value if it already exists in the URL, or simply
create it if it doesn't already.</description>
          <long-description></long-description>
          <tag name="param" line="1154" description="&lt;p&gt;The URL to run against.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="1154" description="&lt;p&gt;The name of the parameter to set in the URL.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="1154" description="&lt;p&gt;The value of the parameter to set in the URL.&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="1154" description="The modified URL." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="54" code="PPC:ERR-50007">No summary for property $db</error>
      <error line="55" code="PPC:ERR-50007">No summary for property $host</error>
      <error line="56" code="PPC:ERR-50007">No summary for property $port</error>
      <error line="57" code="PPC:ERR-50007">No summary for property $pathPrefix</error>
      <error line="59" code="PPC:ERR-50007">No summary for property $user</error>
      <error line="60" code="PPC:ERR-50007">No summary for property $pass</error>
      <error line="61" code="PPC:ERR-50007">No summary for property $authType</error>
      <error line="62" code="PPC:ERR-50007">No summary for property $authSession</error>
      <error line="64" code="PPC:ERR-50007">No summary for property $cache</error>
      <error line="66" code="PPC:ERR-50007">No summary for property $staleDefault</error>
      <error line="68" code="PPC:ERR-50007">No summary for property $globalCookies</error>
      <error line="70" code="PPC:ERR-50007">No summary for property $httpAdapter</error>
      <error line="71" code="PPC:ERR-50007">No summary for property $httpAdapterType</error>
      <error line="80" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="498" code="PPC:ERR-50015">Argument $srcID is missing from the Docblock of copy()</error>
      <error line="498" code="PPC:ERR-50015">Argument $dstID is missing from the Docblock of copy()</error>
      <error line="498" code="PPC:ERR-50015">Argument $dstRev is missing from the Docblock of copy()</error>
      <error line="865" code="PPC:ERR-50015">Argument $cacheImpl is missing from the Docblock of setCache()</error>
      <error line="865" code="PPC:ERR-50008">No summary for method setCache()</error>
      <error line="965" code="PPC:ERR-50015">Argument $key is missing from the Docblock of getCookie()</error>
      <error line="1036" code="PPC:ERR-50015">Argument $path is missing from the Docblock of setPathPrefix()</error>
      <error line="1036" code="PPC:ERR-50008">No summary for method setPathPrefix()</error>
      <error line="1046" code="PPC:ERR-50008">No summary for method getPathPrefix()</error>
      <error line="1051" code="PPC:ERR-50015">Argument $method is missing from the Docblock of procPacket()</error>
      <error line="1051" code="PPC:ERR-50015">Argument $url is missing from the Docblock of procPacket()</error>
      <error line="1051" code="PPC:ERR-50015">Argument $data is missing from the Docblock of procPacket()</error>
      <error line="1051" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of procPacket()</error>
      <error line="1051" code="PPC:ERR-50008">No summary for method procPacket()</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="SagFileCache.php" generated-path="SagFileCache.html" hash="52a1c5e13bd42c8c4dc36f123f2193dd" package="Core">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="" line="32" package="Cache">
      <extends>\SagCache</extends>
      <name>SagFileCache</name>
      <full_name>\SagFileCache</full_name>
      <docblock line="32">
        <description>Cache to the local hard disk. Uses /tmp by default, but you can specify
another location.</description>
        <long-description>Cache keys are used for file names and the contents are JSON. System file
sizes are used to calculate the cache's current size.

Every operation goes to the disk, so this cache will not be ideal for high
I/O operations.</long-description>
        <tag name="package" line="32" description="Cache"/>
        <tag name="version" line="32" description="0.9.0"/>
      </docblock>
      <property static="true" visibility="private" line="33" namespace="" package="Cache">
        <name>$fileExt</name>
        <default>".sag"</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="35" namespace="" package="Cache">
        <name>$fsLocation</name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Cache">
        <name>__construct</name>
        <full_name>\SagFileCache::__construct()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="43" description="&lt;p&gt;The file system path to the directory that should&#10;be used to store the cache files. The local system's temp directory is&#10;used by default.&lt;/p&gt;" type="string" variable="$location">
            <type>string</type>
          </tag>
          <tag name="return" line="43" description="" type="\SagFileCache">
            <type link="SagFileCache.html">\SagFileCache</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$location</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="Cache">
        <name>makeFilename</name>
        <full_name>\SagFileCache::makeFilename()</full_name>
        <docblock line="74">
          <description>Generates the full filename/path that would be used for a given URL's
cache object.</description>
          <long-description></long-description>
          <tag name="param" line="74" description="&lt;p&gt;The URL for the cached item.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="74" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="Cache">
        <name>set</name>
        <full_name>\SagFileCache::set()</full_name>
        <docblock line="78">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="107" package="Cache">
        <name>get</name>
        <full_name>\SagFileCache::get()</full_name>
        <docblock line="107">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="121" package="Cache">
        <name>remove</name>
        <full_name>\SagFileCache::remove()</full_name>
        <docblock line="121">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="126" package="Cache">
        <name>clear</name>
        <full_name>\SagFileCache::clear()</full_name>
        <docblock line="126">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="138" package="Cache">
        <name>removeFile</name>
        <full_name>\SagFileCache::removeFile()</full_name>
        <docblock line="138">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="33" code="PPC:ERR-50007">No summary for property $fileExt</error>
      <error line="35" code="PPC:ERR-50007">No summary for property $fsLocation</error>
      <error line="43" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="78" code="PPC:ERR-50015">Argument $url is missing from the Docblock of set()</error>
      <error line="78" code="PPC:ERR-50015">Argument $item is missing from the Docblock of set()</error>
      <error line="78" code="PPC:ERR-50008">No summary for method set()</error>
      <error line="107" code="PPC:ERR-50015">Argument $url is missing from the Docblock of get()</error>
      <error line="107" code="PPC:ERR-50008">No summary for method get()</error>
      <error line="121" code="PPC:ERR-50015">Argument $url is missing from the Docblock of remove()</error>
      <error line="121" code="PPC:ERR-50008">No summary for method remove()</error>
      <error line="126" code="PPC:ERR-50008">No summary for method clear()</error>
      <error line="138" code="PPC:ERR-50015">Argument $path is missing from the Docblock of removeFile()</error>
      <error line="138" code="PPC:ERR-50008">No summary for method removeFile()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="SagMemoryCache.php" generated-path="SagMemoryCache.html" hash="0321a07018ec1cfd83861223c6e24ae5" package="Core">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="" line="30" package="Cache">
      <extends>\SagCache</extends>
      <name>SagMemoryCache</name>
      <full_name>\SagMemoryCache</full_name>
      <docblock line="30">
        <description>Stores cached items in PHP's memory as serialized JSON, which was
benchmarked as being faster than serliaze() and clone.</description>
        <long-description>Cache sizing is not supported with this caching mechanism. This is because
PHP is not accurate at reporting memory allocation and it does not make
sense to increase latency to implement a broken feature.</long-description>
        <tag name="package" line="30" description="Cache"/>
        <tag name="version" line="30" description="0.9.0"/>
      </docblock>
      <property static="false" visibility="private" line="31" namespace="" package="Cache">
        <name>$cache</name>
        <default></default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="33" package="Cache">
        <name>__construct</name>
        <full_name>\SagMemoryCache::__construct()</full_name>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="38" package="Cache">
        <name>set</name>
        <full_name>\SagMemoryCache::set()</full_name>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="58" package="Cache">
        <name>get</name>
        <full_name>\SagMemoryCache::get()</full_name>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Cache">
        <name>remove</name>
        <full_name>\SagMemoryCache::remove()</full_name>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="Cache">
        <name>clear</name>
        <full_name>\SagMemoryCache::clear()</full_name>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Cache">
        <name>setSize</name>
        <full_name>\SagMemoryCache::setSize()</full_name>
        <docblock line="75">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bytes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="Cache">
        <name>getSize</name>
        <full_name>\SagMemoryCache::getSize()</full_name>
        <docblock line="79">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="Cache">
        <name>getUsage</name>
        <full_name>\SagMemoryCache::getUsage()</full_name>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="31" code="PPC:ERR-50007">No summary for property $cache</error>
      <error line="33" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="38" code="PPC:ERR-50015">Argument $url is missing from the Docblock of set()</error>
      <error line="38" code="PPC:ERR-50015">Argument $item is missing from the Docblock of set()</error>
      <error line="38" code="PPC:ERR-50008">No summary for method set()</error>
      <error line="58" code="PPC:ERR-50015">Argument $url is missing from the Docblock of get()</error>
      <error line="58" code="PPC:ERR-50008">No summary for method get()</error>
      <error line="62" code="PPC:ERR-50015">Argument $url is missing from the Docblock of remove()</error>
      <error line="62" code="PPC:ERR-50008">No summary for method remove()</error>
      <error line="68" code="PPC:ERR-50008">No summary for method clear()</error>
      <error line="75" code="PPC:ERR-50015">Argument $bytes is missing from the Docblock of setSize()</error>
      <error line="75" code="PPC:ERR-50008">No summary for method setSize()</error>
      <error line="79" code="PPC:ERR-50008">No summary for method getSize()</error>
      <error line="83" code="PPC:ERR-50008">No summary for method getUsage()</error>
    </parse_markers>
    <source>eJzNVFFvGkcQfudXTC1kwMIQ9a24iUsdV6F1IPLhRlFVoWVvDjbc7V5293zGkf97ZvbuErBN07eWF3S7s99888038/N5vs5bw5MWAFwpidphDIWO0YJfI4xzIemvvunDn2idMhp+HLyALgcc1VdHvTOG2JoCMrEFbTwUDglDOUhUioB3EnMPSoM0WZ4qoSVCqfw65KlRBozxocYwSy8oXNCDnL6S3UAQvsWx/Ft7n4+Gw7IsByLQHRi7GqZVoBteTS4up9HlKVEOT250is6BxU+FslTscgsiJ0JSLIlmKkowFsTKIt15w4RLq7zSqz44k/hSWGSYWDlv1bLwe3o19Kjq3QBSTGg4GkcwiY7g13E0ifoM8n4yfzO7mcP78fX1eDqfXEYwu4aL2fT1ZD6ZTenrNxhPP8Afk+nrPiCpRXnwLrdcAdFUrCTGQbYIcY9CYipKLkepEiWpNL0qxAphZW7RaqoIcrSZctxRRwRjhklVprzw4ehJXYPWybDVqqVbGGphtxOJ1UVQnYzUIRc8ub0MnSfAJoLsRn47gcgbKgQkv45Becwcy/3uzbuOgwwzY6k1DhxaJVJ1TzG/R7NpH8q1kmsohWOQJWq5zoTd0DUFL5HrSoTzgTmpTs/JbffY7XGJIFOj2WeBQSAOTt3zI+oZ29YVeW4sd612p6oockiGkiCVywYw53PFCaUgpzMaEW9AhJSFFZ59Sk5jvOp5VVOaGhkkDoyUh9hg9S4TmwDlQguD/aRF4diYnirdhjPqOmaoKQ0srdmghgSFL+zXun6hOdhwq6sCw9FtPbovBj/RJAA1UqaCbEQdeht4VbF4R3nicFwdfCZX5FbdcjXt0KsznqO8WNLMQFJoGSpZLCRZxttCelL6cxjOnGZF+9Fo7y7sCWizrqevAh68BGGt2FZ3D8+hO/TddmHTPhy32ShNBpV0Mcv9Nlz2mlOgrllTgsYSdg3Y7fBu0fVk59bcqphaBDfXV3wQyAw6NcOHVpPhh6YO2kpBk27F4Vs6i6Q+dUGkDvdeD4cwSbjDIqU2xluSl9aC6/NQaXqW0SiGATNpDE2HaGfABjGvV19DgwaVVdgR7i+u+u8dHm2CueBt+RI+OqMXMUoT43NvzuoXDtNkNKqIVCLu8X/6soEmMwbooMRZFV3L0DCtyfTg+JjmYmGWH1HuHPfg/BvhEZA98GD/V3X/m1IfZXpOk/PvSUA5dZGmB3PuilKnLfSBdPsC/GMpMkVhu4cRvzMg/zoP4Ua0NLvt5daja/IdGoyvm5AWEbn90SakrfxoTZxW0+JgLcjBSidKkxMCQD1Bh/oYSP1/6Nw42pP/CZ8HaJ2/an0BYR0Wcw==</source>
  </file>
  <file path="SagException.php" generated-path="SagException.html" hash="f1b89b3cc2e839e1998f70c9fc03851c" package="Core">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="" line="23" package="Core">
      <extends>\Exception</extends>
      <name>SagException</name>
      <full_name>\SagException</full_name>
      <docblock line="23">
        <description>This exception is thrown when Sag has an internal error, such as an invalid
type being passed to a function.</description>
        <long-description></long-description>
        <tag name="version" line="23" description="0.9.0"/>
        <tag name="package" line="23" description="Core"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="Core">
        <name>__construct</name>
        <full_name>\SagException::__construct()</full_name>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>""</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="24" code="PPC:ERR-50015">Argument $msg is missing from the Docblock of __construct()</error>
      <error line="24" code="PPC:ERR-50015">Argument $code is missing from the Docblock of __construct()</error>
      <error line="24" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJxlU8Fu2zAMvfsrCKOHNsjiYLdlGzYvzTBjhQPE6YqeCkWmbWGOpElynKDov490ki7FfLElko/vPdKfvtjGRskoAoA7JVF7LKHTJToIDUJqhaTXKTKGX+i8MhreT6ZwzQnxKRTffGSIg+lgKw6gTYDOI2EoD5VqEXAv0QZQGqTZ2lYJLRF6FZqhzwllwhiPJwyzCYLSBRVYOlWXiSBCxLn8NCHYWZL0fT8RA92JcXXSHhN9cpfNF3mxeEeUh5J73aL34PBPpxyJ3RxAWCIkxYZotqIH40DUDikWDBPunQpK12Pwpgq9cMgwpfLBqU0X3vh1pkeqLxPIMaEhTgvIihi+pUVWjBnkIVv/WN6v4SFdrdJ8nS0KWK5gvsxvs3W2zOn0HdL8EX5m+e0YkNyiPri3jhUQTcVOYjnYViC+oVCZIyVvUapKSZKm607UCLXZodOkCCy6rfI8UU8ES4Zp1VYFEYar/3RNolES0bbQuoxgzbM9jpVXgg6hcaYnvxrUUIgaGsGwZGGgfqIFdM44srGTDZxDO9GqkuHCwSJscKAlvD+6L6DqtGR80jh0/bo7reB08oEmyjc09N+sa254NMRQtgTADBav7HAfUJce/t08k1rbbWjwrz3g6UmS7uA6Ga6vtr6GzxDHY7iSpkT6nt4MVVRHS6DDbHaZH7PiBSucAdee64Yf4yV6if4Cn9IdcQ==</source>
  </file>
  <package name="Cache" full_name="Cache"/>
  <package name="Core" full_name="Core"/>
  <package name="HTTP" full_name="HTTP"/>
  <package name="Utils" full_name="Utils"/>
  <namespace name="global" full_name="global"/>
  <deprecated count="0"/>
</project>
